#pragma checksum "D:\code\BMD\Yigael\Leumi\TrafficLightSimulation\TrafficLightSimulation\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0468c437b7e5b387da0f38e8c373ca12bac8a012"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\code\BMD\Yigael\Leumi\TrafficLightSimulation\TrafficLightSimulation\Views\_ViewImports.cshtml"
using TrafficLightSimulation;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\code\BMD\Yigael\Leumi\TrafficLightSimulation\TrafficLightSimulation\Views\_ViewImports.cshtml"
using TrafficLightSimulation.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0468c437b7e5b387da0f38e8c373ca12bac8a012", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2dae1a1ac8b858fbadf6c65027a47055014ad10a", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/style.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\code\BMD\Yigael\Leumi\TrafficLightSimulation\TrafficLightSimulation\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0468c437b7e5b387da0f38e8c373ca12bac8a0124418", async() => {
                WriteLiteral("\r\n    <meta charset=\"UTF-8\">\r\n    <title>Traffic Light Simulator</title>\r\n    <link rel=\'stylesheet\' href=\'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.2/css/all.min.css\'>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0468c437b7e5b387da0f38e8c373ca12bac8a0124875", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0468c437b7e5b387da0f38e8c373ca12bac8a0126761", async() => {
                WriteLiteral(@"
    <!-- partial:index.partial.html -->
    <div class=""container"">
        <div class=""circle"" color=""red"" id=""red""></div>
        <div class=""circle"" color=""yellow"" id=""yellow""></div>
        <div class=""circle"" color=""green"" id=""green""></div>
    </div>

    <!-- partial -->
    <script type=""text/javascript"" src=""https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js""></script>

    <script>

        const circles = document.querySelectorAll('.circle')
        let setTimeInterval = 100;
        let activeLight = 0;
        var color = ""red"";
        var interval;
        window.onload = trafficLogic();
        function trafficLogic() {
             $.ajax({
               type: ""POST"",
                 url: """);
#nullable restore
#line 37 "D:\code\BMD\Yigael\Leumi\TrafficLightSimulation\TrafficLightSimulation\Views\Home\Index.cshtml"
                  Write(Url.Action("LightLogic", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                 data: { ""color"": color },
               dataType: ""json"",
               success: onSuccess,
               fail: onFail
           });
           function onSuccess(response) {
               setTimeInterval = response.time;
               if (response.color == ""red"") {
                   $(""#red"").removeClass();
                   $(""#yellow"").removeClass();
                   $(""#green"").removeClass();
                   $(""#red"").addClass(""circle red"");
                   $(""#yellow"").addClass(""circle"");
                   $(""#green"").addClass(""circle"");
                   color = ""redyellow"";
               }
               if (response.color == ""redyellow"") {
                   $(""#red"").removeClass();
                   $(""#yellow"").removeClass();
                   $(""#green"").removeClass();
                   $(""#red"").addClass(""circle red"");
                   $(""#yellow"").addClass(""circle yellow"");
                   $(""#green"").addClass(""circle"");
     ");
                WriteLiteral(@"              color = ""green"";
               }
               if (response.color == ""green"") {
                   $(""#red"").removeClass();
                   $(""#yellow"").removeClass();
                   $(""#green"").removeClass();
                   $(""#red"").addClass(""circle"");
                   $(""#yellow"").addClass(""circle"");
                   $(""#green"").addClass(""circle green"");
                   color = ""yellow"";
               }
               if (response.color == ""yellow"") {
                   $(""#red"").removeClass();
                   $(""#yellow"").removeClass();
                   $(""#green"").removeClass();
                   $(""#red"").addClass(""circle"");
                   $(""#yellow"").addClass(""circle yellow"");
                   $(""#green"").addClass(""circle"");
                   color = ""red"";
               }
               console.log(setTimeInterval);
               console.log(response);
               console.log(color);
               clearInterval(interval);
 ");
                WriteLiteral(@"              interval  = window.setInterval(trafficLogic, setTimeInterval);
           }
           function onFail(response) {
               //alert(""An error occurred."");
           }
        }

       function changeLight() {
           circles[activeLight].className = 'circle';
           activeLight++;

           if (activeLight > 2) {
               activeLight = 0;
           }

           const currentLight = circles[activeLight]

           currentLight.classList.add(currentLight.getAttribute('color'));
       }
    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
